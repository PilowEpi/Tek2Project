-- DONE
• sa
swap the first two elements of l_a (nothing will happen if there aren’t enough elements). => [1,2] == [2,1]
• sb
swap the first two elements of l_b (nothing will happen if there aren’t enough elements). [3,4] == [4,3]
• sc
sa and sb at the same time. [1,2] [3,4] == [2,1] [4,3]
• ra
rotate l_a toward the beginning, the first element will become the last. [12,2] == [12,1]
• rb
rotate l_b toward the beginning, the first element will become the last. [13,14] == [14,13]
• rr
ra and rb at the same time. [1,2] [3,4] == [2,1] [4,3]
• pa
take the first element from l_b and move it to the first position on the l_a list (nothing will happen if l_b is empty). [] [3,4] == [3] [4]
• pb
take the first element from l_a and move it to the first position on the l_b list (nothing will happen if l_a is empty). [1,2] [] == [2] [1]
• rra
rotate l_a toward the end, the last element will become the first. [22, 21, 25] == [ 25, 21, 22] 
• rrb
rotate l_b toward the end, the last element will become the first. [27, 21, 40] == [40, 21, 27]
• rrr
rra and rrb at the same time

-- NOT DONE
CHECK IF LIST B IS EMPTY